in[]:
import dask.dataframe as dd
import pandas as pd

# uses DASK to check large datasets
TBD = pd.read_csv('TripsByDistance.csv')
TFD = pd.read_csv('TripsFullData.csv')
# inspects the data
print(TBD.head())
print(TFD.head())

Out[]:
C:\Users\Mahesh\anaconda3\envs\Codes\python.exe "C:\Coding and more\5004CMD CW\Data Acquisition.py" 
      Level        Date  State FIPS  ...             Row ID  Week Month
0  National  01/01/2019         NaN  ...  00-00000-20190101     0     1
1  National  01/02/2019         NaN  ...  00-00000-20190102     0     1
2  National  01/03/2019         NaN  ...  00-00000-20190103     0     1
3  National  01/04/2019         NaN  ...  00-00000-20190104     0     1
4  National  01/05/2019         NaN  ...  00-00000-20190105     0     1

[5 rows x 22 columns]
  Month of Date Week of Date  ...  Trips 50-100 Miles Trips 500+ Miles
0        August      Week 32  ...            19911937          4469346
1        August      Week 32  ...            17819554          4085888
2        August      Week 32  ...            17450413          3369125
3        August      Week 32  ...            17819019          1876445
4        August      Week 32  ...            17469044          4674725

[5 rows x 22 columns]

Process finished with exit code 0

in[]
# converts time columns to appropriate values
TBD["Date"] = pd.to_datetime(TBD["Date"], errors="coerce")
TFD['Date'] = pd.to_datetime(TFD["Date"], errors="coerce")
# handles the missing values by removing the rows/columns with NA values
TBD.dropna(inplace=True)
TFD.dropna(inplace=True)
# counts the unique values in the week column
df = dd.from_pandas(TBD, npartitions=10)
week_count = df["Week"].nunique().compute()
print("Number of unique weeks:", week_count)

Out[]
C:\Users\Mahesh\anaconda3\envs\Codes\python.exe "C:\Coding and more\5004CMD CW\Data Acquisition.py" 
      Level        Date  State FIPS  ...             Row ID  Week Month
0  National  01/01/2019         NaN  ...  00-00000-20190101     0     1
1  National  01/02/2019         NaN  ...  00-00000-20190102     0     1
2  National  01/03/2019         NaN  ...  00-00000-20190103     0     1
3  National  01/04/2019         NaN  ...  00-00000-20190104     0     1
4  National  01/05/2019         NaN  ...  00-00000-20190105     0     1

[5 rows x 22 columns]
  Month of Date Week of Date  ...  Trips 50-100 Miles Trips 500+ Miles
0        August      Week 32  ...            19911937          4469346
1        August      Week 32  ...            17819554          4085888
2        August      Week 32  ...            17450413          3369125
3        August      Week 32  ...            17819019          1876445
4        August      Week 32  ...            17469044          4674725

[5 rows x 22 columns]
Number of unique weeks: 45
        Level       Date  State FIPS  ...             Row ID  Week Month
21061  County 2021-06-06        56.0  ...  56-56045-20210606    23     6
22762  County 2021-06-06         5.0  ...  05-05011-20210606    23     6
22763  County 2021-06-06         5.0  ...  05-05013-20210606    23     6
22764  County 2021-06-06         5.0  ...  05-05015-20210606    23     6
22765  County 2021-06-06         5.0  ...  05-05017-20210606    23     6

[5 rows x 22 columns]
  Month of Date Week of Date  ...  Trips 50-100 Miles Trips 500+ Miles
0        August      Week 32  ...            19911937          4469346
1        August      Week 32  ...            17819554          4085888
2        August      Week 32  ...            17450413          3369125
3        August      Week 32  ...            17819019          1876445
4        August      Week 32  ...            17469044          4674725

[5 rows x 22 columns]

Process finished with exit code 0

In[]


